<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.raju.medium</groupId>
	<artifactId>timely-greetings</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Timely Greetings</name>
	<description>A Spring Boot project for scheduling and sending timely birthday greetings.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<!-- Spring Boot Starter for JPA -->
		<!-- Provides support for working with relational databases using JPA (Java Persistence API). -->
		<!-- Enables the use of Spring Data JPA repositories for database operations. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Boot Starter for Web -->
		<!-- Provides the foundation for building a Spring Boot application with REST APIs. -->
		<!-- Although we are not building REST endpoints in this implementation, it is included as a standard dependency. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


		<!-- Spring Boot Starter for Mail -->
		<!-- Provides the tools to send emails using JavaMailSender. -->
		<!-- Handles email configuration and delivery via SMTP servers (e.g., Gmail). -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>


		<!-- Spring Boot Starter for Thymeleaf -->
		<!-- Allows us to create dynamic email templates using Thymeleaf. -->
		<!-- Makes it easy to personalize emails with customer-specific data (e.g., name). -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>


		<!-- Spring Retry -->
		<!-- Adds retry functionality to handle transient failures like network issues or email server downtime. -->
		<!-- Ensures that email delivery is retried a few times before marking it as a failure. -->
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
			<version>1.3.4</version>
		</dependency>


		<!-- Spring Boot Starter for AOP -->
		<!-- Enables aspect-oriented programming (AOP), which is required for Spring Retry to work. -->
		<!-- Allows us to apply retry logic declaratively using annotations. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>


		<!-- Spring Boot DevTools -->
		<!-- Provides tools for faster development, such as automatic application restarts when code changes. -->
		<!-- Useful for local development but should not be included in production builds. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>


		<!-- H2 Database -->
		<!-- Provides an in-memory database for local testing. -->
		<!-- Eliminates the need for an external database, making it easy to set up and test the application locally. -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok -->
		<!-- Reduces boilerplate code by generating getters, setters, constructors, and more at compile time. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter for Testing -->
		<!-- Provides tools for writing and running unit tests and integration tests. -->
		<!-- Includes libraries like JUnit, Mockito, and Spring Test. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
